{-# LANGUAGE TemplateHaskell #-}
{-# OPTIONS_HADDOCK prune #-}

{-|
Module      : Liquorice.Monad
Description : Liquorice functions under the `State` Monad.
Copyright   : Â© Jonathan Dowland, 2020
License     : GPL-3
Maintainer  : jon+hackage@dow.land
Stability   : experimental
Portability : POSIX

Core `Liquorice` functions for building maps. These are all under the
`State` Monad, the state which is passed around is the `Context` being
operated on.

These functions are wrapped versions of those in `Liquorice.Pure`. The
wrapped versions are generated by Template Haskell expressions defined
in Liquorice.Monad.TH.
-}
module Liquorice.Monad where

import Control.Monad.State.Lazy
import Control.Monad
import Language.Haskell.TH hiding (location)

import Liquorice
import qualified Liquorice.Pure as P
import Liquorice.Monad.TH

-- injects monadic-wrapped versions of the functions from Liquorice.Pure
wrapPureFunctions

-- | Evaluate the supplied State Context to produce a pure Context. In other words,
-- run the supplied Liquorice DSL program and calculate the resulting structure.
runWadL x = snd $ runState x start
